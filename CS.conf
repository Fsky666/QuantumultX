# 第二次写
# Update:2022.06.21
#----------------------------------------------------------
# 教程：
# 1. 官方配置说明：https://github.com/crossutility/Quantumult-X/blob/master/sample.conf
# 2. 有简单注释部分的配置示范（KOP-XIAO作者更新很勤）：https://github.com/KOP-XIAO/QuantumultX/blob/master/QuantumultX_Profiles.conf
# 3. Quantumult X 不完全教程：https://www.notion.so/Quantumult-X-1d32ddc6e61c4892ad2ec5ea47f00917
# 4. 耳东橙视频志EDCVlog https://github.com/erdongchanyo/Rules/blob/main/Quantumult%20X/README.md
#----------------------------------------------------------
# 👇大神的项目地址

# 1.KOP-XIAO（资源解析器） ：https://github.com/KOP-XIAO/QuantumultX
# 1.Quantumult X 资源解析器使用说明: https://www.notion.so/Quantumult-X-6bd13c1adc174debb80ebd3f5dfdd744

# 2.Orz-3（阔佬mini小白配置创始人）：https://github.com/Orz-3/mini
# 2.Orz-3电报群：https://web.telegram.org/z/#-1320954769

# 3.chavyleung（BoxJS作者）：https://github.com/chavyleung/scripts
# 3.BoxJS电报：https://web.telegram.org/z/#-1405837783

# 规则：
# 1.DivineEngine（神机规则）：https://github.com/DivineEngine/Profiles/tree/master
# 2.ACL4SSR：https://github.com/ACL4SSR/ACL4SSR/tree/master
# 3.lhie1(洞主规则)：https://github.com/lhie1/Rules/tree/master
# 4.GeQ1an（维护的Stick Rules规则） ：https://github.com/GeQ1an/Rules/tree/master/QuantumultX
# 5.blackmatrix7（规则整合）:https://github.com/blackmatrix7/ios_rule_script

#----------------------------------------------------------
# 1.图标库：https://github.com/Koolson/Qure
# 2.图标库：https://github.com/Orz-3/mini
# 3.图标库：https://github.com/Semporia/Hand-Painted-icon
# 4.图标库：https://github.com/Semporia/Quantumult-X/tree/master/Bubble
#----------------------------------------------------------
# 配置说明

# [general] 常用设置

# [dns] DNS设置

# [policy] 策略组

# [server_remote/local] 远程/本地 节点添加

# [filter_remote/local] 远程/本地 分流规则

# [rewrite_remote/local] 远程/本地 重写规则

# [mitm] 解密模块

# JavaScript 脚本以及 [task] 的使用
#----------------------------------------------------------


#==========================================================
#===============【通用设置[general]】======================
#==========================================================
[general]
#----------------------------------------------------------

# 项目图标显示
profile_img_url= https://raw.githubusercontent.com/Fsky666/QuantumultX/main/model.png?token=GHSAT0AAAAAABVRJFYBSPWU2W7TKCTSHCACYVPFMKA

#----------------------------------------------------------

# 👍👍👍资源解析器，可用于自定义各类远程资源的转换，如节点，规则 filter，复写 rewrite 等，url 地址可远程，可 本地/iCloud(Quantumult X/Scripts目录)
# 可本地/iCloud(Quantumult X/Scripts目录)
resource_parser_url=https://cdn.jsdelivr.net/gh/KOP-XIAO/QuantumultX@master/Scripts/resource-parser.js

#----------------------------------------------------------

# 代理延迟测速 URL
# 对指定的网址进行相应测试，以确认节点的可用性
server_check_url=http://cp.cloudflare.com/generate_204

#----------------------------------------------------------

# 👍👍geo_location_checker
# 用于节点页面的节点信息展示，可完整自定义展示内容与方式
# extreme-ip-lookup为Quantumult X 作者提供的示范 api
# geo_location_checker=http://extreme-ip-lookup.com/json/, https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-location-with-script.js
# 下面是KOP-XIAO大佬所使用的 api 及获取、展示节点信息的 js
geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/IP_API.js
# 禁用显示方法 注释掉了
;geo_location_checker=disabled

#----------------------------------------------------------

# dns_exclusion_list
# list中的域名将不使用fake-ip方式, 多个域名用“, ”连接。其它域名则全部采用 fake-ip 及远程解析的模式
dns_exclusion_list=*.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me, *.pingan.com.cn, *.cmbchina.com, *.boc.cn, *.lch12138.xyz, *.fsky.xyz

#----------------------------------------------------------

# 下列表中内容将不经过 QuantumultX 的处理，修改后最好重启设备。 
excluded_routes=239.255.255.250/32, 24.105.30.129/32, 185.60.112.157/32, 185.60.112.158/32, 182.162.132.1/32

#----------------------------------------------------------

# UDP名单，白名单，留空则默认所有为端口。不在udp白名单列表中的端口，将被丢弃处理（返回 ICMP  “端口不可达” 信息）。
udp_whitelist=1-442, 444-65535

#----------------------------------------------------------

# UDP Drop名单，同白名单类似，但不会返回 ICMP “端口不可达” 信息
# drop 名单仅处理 whitelist名单中的端口 ⚠️演示注释不可删⚠️ 了
;udp_drop_list = 1900, 80

#----------------------------------------------------------

# 👍👍👍运行模式模块，running_mode_trigger 设置，即根据网络自动切换 分流/直连/全局代理 等模式。
# running-mode-trigger 模式下，跟手动切换直连/全局代理 等效，rewrite/task 模块始终会生效，比 ssid 策略组设置简单，比 ssid-suspend 更灵活。
# running_mode_trigger=filter, filter, asus-5g:all_direct, asus:all_proxy
# 上述写法，前两个 filter 先后表示 在 [数据蜂窝网络] 跟 [一般 Wi-Fi] 下，走 filter(分流)模式，后面则表示在 asus-5g 下切换为全局直连[all_direct]，asus 切换为全局代理[all_proxy]
# 如需使用，相应 SSID 换成你自己 Wi-Fi 名即可

running_mode_trigger=filter, filter, CMCC++:all_direct, CMCC: all_direct

#----------------------------------------------------------

# 根据Wi-Fi网络名称 停止运行 ⚠️演示注释不可删⚠️ 
# ssid_suspended_list 写入你想要 Quantumult X 暂停的 Wi-Fi网络名称，多个wifi用“,”连接
;ssid_suspended_list=CMCC++, CMCC

#----------------------------------------------------------

# 指定 DoH  请求所使用的 User-Agent ⚠️演示注释不可删⚠️ 
;doh_user_agent=Agent/1.0

#----------------------------------------------------------

# 指定服务器测试时所使用的 User-Agent ⚠️演示注释不可删⚠️ 
;server_check_user_agent = Agent/1.0

#----------------------------------------------------------


#==========================================================
#==================【DNS设置[dns]】========================
#==========================================================
[dns]
#----------------------------------------------------------

# 禁用系统 DNS（no-system） 以及 ipv6 ⚠️演示注释不可删⚠️ （no-system）
;no-system
no-ipv6

#----------------------------------------------------------

# 指定 dns 服务器，并发响应选取最优结果

# 腾讯云DNSPod DNS
server=119.29.29.29:53
server=119.28.28.28
# 阿里 AliDNS
server=223.5.5.5
# 114 DNS
server=114.114.114.114

#----------------------------------------------------------

# 如指定 doh 服务，则👆️上面的一般 dns 解析均失效 额外参数，在特定网络下禁用该 doh ⚠️演示注释不可删⚠️ 
;doh-server=xxx.com, excluded_ssids=SSID1, SSID2

# 1.0.29 版本后支持多个 doh 并发，👇 ⚠️演示注释不可删⚠️ 
;doh-server=xx1.com,xx2.com,excluded_ssids=SSID1, SSID2

# 1.0.29 版本后支持 alias 映射类型 ⚠️演示注释不可删⚠️ 
;alias=/example.com/another-example.com

# 例子：同时使用多个DoH服务器(Tf功能 👇 ⚠️演示注释不可删⚠️ 
# DNS.SB,阿里,红鱼,IIJ
; doh-server=https://doh.dns.sb/dns-query, https://dns.alidns.com/dns-query, https://rubyfish.cn/dns-query, https://public.dns.iij.jp/dns-query

#----------------------------------------------------------

# 指定域名解析dns
server=/*.taobao.com/223.5.5.5
server=/*.tmall.com/223.5.5.5
server=/*.alipay.com/223.5.5.5
server=/*.aliyun.com/223.5.5.5
server=/*.jd.com/119.28.28.28
server=/*.qq.com/119.28.28.28
server=/*.tencent.com/119.28.28.28
server=/*.weixin.com/119.28.28.28
server=/*.bilibili.com/119.29.29.29
server=/*.netease.com/119.29.29.29
server=/*testflight.apple.com/23.76.66.98


# ⚠️注意⚠️ 下面为示范，按需启用, 同样支持 excluded_ssids/included_ssids 参数
;server=/*.taobao.com/223.5.5.5, excluded_ssids=My-Wifi, Your-Wifi
;server=/*.tmall.com/223.5.5.5, included_ssids=His-Wifi
;server=/*.qq.com/119.28.28.28
;server=/*.163.com/119.29.29.29
;server=/*.netease.com/119.29.29.29
;server=/*.mi.com/119.29.29.29
;server=/*testflight.apple.com/23.76.66.98
;server=8.8.8.8
;server=/example1.com/8.8.4.4
;server=/*.example2.com/223.5.5.5
;server=/example4.com/[2001:4860:4860::8888]:53
;address=/example5.com/192.168.16.18
;address=/example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]
#*/

#----------------------------------------------------------


#==========================================================
#=================【策略组[policy]】=======================
#==========================================================

[policy]

#----------------------------------------------------------

# 👇模块说明：

#  👇以下为【策略类型】部分 类型后面 跟 策略名称

#   1.【static=】 静态策略组，即你手动选择 节点/子策略 ⚠️常用⚠️ 
#   2.【available=】 策略组将按顺序选择你列表中第一个可用的节点。
#   3.【round-robin=】 策略组，将按列表的顺序轮流使用其中的节点。
#   4.【dest-hash=】 策略组，随机负载均衡，但相同域名走固定节点。
#   5.【url-latency-benchmark=】 延迟策略组，选取延迟最优节点。⚠️常用⚠️ 
#   6.【ssid=】 策略组，将根据你所设定的网络来自动切换节点/策略组


#  👇以下为【内置的 3 种策略】部分

#   1.【Proxy】 / 代理
#   2.【Direct】 / 直连
#   3.【Reject】 / 拒绝


#  👇以下为【筛选节点】部分 ⚠️可选⚠️

#   1.【server-tag-regex】 使用【正则筛选参数】，以及 resource-tag-regex 参数用于正则筛选来建立策略组。⚠️常用⚠️  具体可参见教程部分: https://shrtm.nu/DAFP 


#  👇以下为【节点选择最优节点】部分 ⚠️可选⚠️【只是选择延迟最低不代表速度最快】

#   1.【check-interval=】表示节点测速循环时间 单位/秒 600=10分钟 ⚠️常用⚠️ 
#   2.【tolerance=】表示两次测数的延迟容差值 列：测第一次100 测第二次150 容差值是50 大于这个值才切换 ⚠️常用⚠️ 
#   3.【alive-checking=】链接活动检查（false/true）


#  👇以下为【图标】部分 ⚠️可选⚠️

#   1.【img-url=】 图标，参数用于指定策略组图标，可远程，也可本地/iCloud(Quantumult X/Images路径下) （108*108 大小） ⚠️常用⚠️ 
#   2.【direct/proxy/reject】 图标，此些默认策略 只能用本地图标，名字分别为 direct.png, proxy.png,reject.png 放置于 Images 文件夹下即可生效 (108*108 大小)


#----------------------------------------------------------

# 👇演示例子：⚠️演示注释不可删⚠️ 

#  👇常用【筛选节点】 并 【测数】 

#   1.【策略类型】+【筛选节点】+【节点选择最优节点】+【图标】
;url-latency-benchmark=Auto-HK, server-tag-regex=港, check-interval=600, tolerance=50, alive-checking=false, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Auto.png


#  👇常用【节点服务器按地区分组策略】

#   1.【策略类型】+【筛选节点】+【图标】
;static=HK, server-tag-regex=HK|香港|港|🇭🇰️|Hongkong, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/HK02.png


#  👇常用【为分流规则选择节点】

#   1.【策略类型】+【自己添加的策略】+【默认策略】+【图标】
;static=Netflix, US, HK, JP, TW, SG, Final, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Netflix.png

#----------------------------------------------------------
#----------------------------------------------------------
#----------------------------------------------------------
## 将分流规则传递过来的网络请求进行分发

# 自动选择最优节点-HK
url-latency-benchmark=Auto-HK, server-tag-regex=HK|香港|港|🇭🇰️|Hongkong, check-interval=600, tolerance=50, alive-checking=false, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Auto.png
# 服务器按地区分组策略
# 美国
static=US, server-tag-regex=美|美国|美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|🇺🇸|US|us, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/US.png
# 香港
static=HK, server-tag-regex=HK|香港|港|🇭🇰️|Hongkong, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/HK02.png
# 日本
static= JP, server-tag-regex= 日|日本|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|JP, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/JP.png
# 台湾
static=TW, server-tag-regex=台|台湾|TW, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/TW02.png
# 新加坡
static=SG, server-tag-regex=狮城|新|新加坡|🇸🇬|SG, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Country/SG.png
# Global策略
static=Global, US, HK, JP, TW, SG, Final, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Outside.png
# GlobalMedia策略
static=GlobalMedia, US, HK, JP, TW, SG, Final, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/GMedia.png

# 国外媒体细分策略
# > Netflix策略
static=Netflix, US, HK, JP, TW, SG, Final, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Netflix.png
# > YouTube策略
static=YouTube, US, HK, JP, TW, SG, Final, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Youtube.png
# > Spotify策略
static=Spotify, US, HK, JP, TW, SG, Final, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Spotify.png
# > TikTok策略
static=TikTok, US, JP, TW, SG, Final, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Tiktok.png

# 国内媒体细分策略
# > BiliBili策略
static=BiliBili, HK, TW, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Bilibili.png

# 软件&服务策略
# > Telegram策略
static=Telegram, US, HK, JP, TW, SG, Final, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Telegram.png
# > Twitter策略
static=Twitter, US, HK, JP, TW, SG, Final, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Twitter.png
# > Speedtest策略
static=Speedtest, US, HK, JP, TW, SG, Final, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Speedtest.png
# > TestFlight策略
static=TestFlight, US, HK, JP, TW, SG, Final, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/TestFlight.png
# > Apple策略
static=Apple, US, HK, JP, TW, SG, Final, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Apple.png
# > Google策略
static=Google, US, HK, JP, TW, SG, Final, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Google.png
# > Microsoft策略
static=Microsoft, US, HK, Final, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Microsoft.png
# > Weibo策略
static=Weibo, US, HK, Final, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Weibo.png
# # Mainland策略-国内访问
static=Mainland, Final, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Mainland.png
# Advertising策略-去广告
static=Advertising, direct, reject, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/AdBlock.png
# FINAL策略：如果以上的策略均未被匹配到，则听从此策略组的规定
static=Final, Auto-HK, proxy, direct, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/Final01.png


#----------------------------------------------------------
#----------------------------------------------------------
#----------------------------------------------------------






#==========================================================
#=============【远程 节点添加[server_remote]】=============
#==========================================================
[server_remote]
#----------------------------------------------------------

https://rss-node.com/link/6lv3LzNaLcqapycr?mu=1, tag=海豚湾, update-interval=172800, opt-parser=true, enabled=true
https://a.luxury/link/TyHD0O2st8Roc0Yy?sub=4, tag=GG-Trojan, update-interval=172800, opt-parser=true, enabled=true

#----------------------------------------------------------

#==========================================================
#=============【本地 节点添加[server_local]】==============
#==========================================================
[server_local]
#----------------------------------------------------------

#==========================================================
#=============【远程 分流规则[filter_remote]】=============
#==========================================================
[filter_remote]
#----------------------------------------------------------

# 【opt-parser=】true/false 用于控制是否对订阅开启资源解析器，不写或者 false 表示不启用解析器

# 👇模块说明：
#参数【tag】【force-policy】【enabled】【update-interval】【opt-parser=】是可选的。 
# 各种远程资源的默认同步时间间隔为86400秒。 
#【tag=】 设置【标签名称】
#【force-policy=】 【强制使用策略偏好】。当添加此项时，将忽略远程资源过滤器中的策略，使用 force-policy。
#【update-interval=】 【设置远程连接同步时间间隔】（单位/秒） 不填默认为86400秒，负数表示禁用自动同步。
#【opt-parser=】 【设置是否使用连接解析器】
#【enabled=】控制【是否启用分流规则】

#----------------------------------------------------------
#跟节点引用一样，可以使用远程链接，也可以使用本机/iCloud文件路径

# 👇演示例子：⚠️演示注释不可删⚠️ 
#列：远程链接+标签
#https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Guard/Advertising.list, tag=🚦去广告，enabled=true

#列：本地文件+标签+指定策略组+使用地址解析器
#advertising.txt, tag=🚦去广告，forcr-policy=reject, opt-parser=true, enabled=true

#列：远程链接+标签+指定策略组+连接更新间隔+使用地址解析器
#https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Unbreak.list, tag=规则修正, force-policy=direct, update-interval=172800秒, opt-parser=true, enabled=true

#列：远程链接+标签+指定策略组+连接更新间隔+使用地址解析器
#https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Video/TikTok.list, tag=海外抖音, force-policy=全球加速, update-interval=172800, opt-parser=true, enabled=true

#----------------------------------------------------------
#----------------------------------------------------------
#----------------------------------------------------------










#----------------------------------------------------------
#----------------------------------------------------------
#----------------------------------------------------------







#==========================================================
#===========【本地 分流规则[filter_local]】================
#==========================================================
[filter_local]
#----------------------------------------------------------

#==========================================================
#===========【远程 重写规则[rewrite_remote]】==============
#==========================================================
[rewrite_remote]
#----------------------------------------------------------

# 【opt-parser=】true/false 用于控制是否对订阅开启资源解析器，不写或者 false 表示不启用解析器

#----------------------------------------------------------
#----------------------------------------------------------
#----------------------------------------------------------





#----------------------------------------------------------
#----------------------------------------------------------
#----------------------------------------------------------



#==========================================================
#============【本地 重写规则[rewrite_local]】==============
#==========================================================
[rewrite_local]
#----------------------------------------------------------

#==========================================================
#============【远程 Task规则[task_local]】=================
#==========================================================
[task_local]
#----------------------------------------------------------

#模块说明：
#包含 3⃣️ 种类型: cron 定时任务，UI交互脚本，网络切换脚本

#----------------------------------------------------------

#类型说明：

#  1⃣️  任务模块，可用于签到,天气话费查询等
#js文件放于iCloud或者本机的Quantumult X/Scripts 路径下。TF版本可直接使用远程js链接
#从 “分” 开始的5位cron 写法，具体 cron 表达式可自行 Google
#比如上述语句 代表每天 12 点 2 分，自动执行一次;
#tag参数为 task 命名标识;
#img-url参数用于指定 task 的图标(108*108)
#👇演示例子： ⚠️演示注释不可删⚠️ 
;2 12 * * * sample.js, tag=本地示范(左滑编辑，右滑执行), enabled=false, img-url=https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png
;13 12 * * * https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-task.js, tag=远程示范(点击缓存/更新脚本), enabled=false, img-url=https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png

#  2⃣️  UI交互查询脚本示范，在首页长按 节点/策略组 唤出
#👇演示例子： ⚠️演示注释不可删⚠️ 
;event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/streaming-ui-check.js, tag = 流媒体 - 解锁查询，img-url=checkmark.seal.system, enabled=true

#  3⃣️  网络切换/变化时 触发的脚本类型
#👇演示例子： ⚠️演示注释不可删⚠️ 
;event-network sample-taks.js

#==========================================================================================================================
#===================================================【中间人攻击[mitm]】===================================================
#==========================================================================================================================
[mitm]
#----------------------------------------------------------
# 开启 mitm，需要自行在Quantumult X中生成证书、安装、信任
#----------------------------------------------------------
passphrase = 9DDDFBE3
p12 = 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














